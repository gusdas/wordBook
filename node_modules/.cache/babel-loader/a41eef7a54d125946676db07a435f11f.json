{"ast":null,"code":"import { db } from '../../firebase';\nimport { collection, doc, getDocs, addDoc, updateDoc, deleteDoc } from 'firebase/firestore'; // Actions\n\nconst LOAD = 'wordBooks/LOAD';\nconst CREATE = 'wordBooks/CREATE';\nconst UPDATE = 'wordBooks/UPDATE';\nconst REMOVE = 'wordBooks/REMOVE'; //initial State\n\nconst initialState = {\n  list: []\n}; // Action Creators\n\nexport function loadWordBook(wordBook_list) {\n  return {\n    type: LOAD,\n    wordBook_list\n  };\n}\nexport function createWordBook(wordBook) {\n  return {\n    type: CREATE,\n    wordBook\n  };\n}\nexport function updateWordBook(wordBooks) {\n  return {\n    type: UPDATE,\n    wordBooks\n  };\n}\nexport function removeWordBook(index) {\n  return {\n    type: REMOVE,\n    index\n  };\n} //middleware\n\nexport const loadWordBookFB = () => {\n  return async function (dispatch) {\n    const wordBook_data = await getDocs(collection(db, 'wordBook'));\n    let wordBook_list = [];\n    wordBook_data.forEach(doc => {\n      wordBook_list.push({ ...doc.data(),\n        id: doc.id\n      });\n    });\n    dispatch(loadWordBook(wordBook_list));\n  };\n};\nexport const addWordBookFB = wordBook => {\n  return async function (dispatch) {\n    const docRef = await addDoc(collection(db, 'wordBook'), wordBook);\n    const wordBook_data = { ...wordBook,\n      id: docRef.id\n    };\n    console.log(wordBook_data);\n    dispatch(createWordBook(wordBook_data));\n  };\n};\nexport const updateWordBookFB = (wordBooks, wordBook) => {\n  return async function (dispatch) {\n    const docRef = doc(db, 'wordBook', wordBook.id);\n    updateDoc(docRef, wordBook);\n    dispatch(updateWordBook(wordBooks));\n  };\n};\nexport const removeWordBookFB = (id, index) => {\n  return async function (dispatch) {\n    const docRef = doc(db, 'wordBook', id);\n    deleteDoc(docRef);\n    dispatch(removeWordBook(index));\n  };\n}; // Reducer\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (action.type) {\n    // do reducer stuff\n    case LOAD:\n      {\n        return {\n          list: action.wordBook_list\n        };\n      }\n\n    case CREATE:\n      {\n        const new_wordBook_list = [...state.list, action.wordBook];\n        return {\n          list: new_wordBook_list\n        };\n      }\n\n    case UPDATE:\n      {\n        const new_wordBook_list = action.wordBooks;\n        return {\n          list: new_wordBook_list\n        };\n      }\n\n    case REMOVE:\n      {\n        const index = action.index;\n        const new_wordBook_list = state.list.filter((item, i) => i !== index);\n        return {\n          list: new_wordBook_list\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/HHS/Documents/git/wordbook/src/redux/modules/wordBook.js"],"names":["db","collection","doc","getDocs","addDoc","updateDoc","deleteDoc","LOAD","CREATE","UPDATE","REMOVE","initialState","list","loadWordBook","wordBook_list","type","createWordBook","wordBook","updateWordBook","wordBooks","removeWordBook","index","loadWordBookFB","dispatch","wordBook_data","forEach","push","data","id","addWordBookFB","docRef","console","log","updateWordBookFB","removeWordBookFB","reducer","state","action","new_wordBook_list","filter","item","i"],"mappings":"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","sourcesContent":["import { db } from '../../firebase';\r\nimport {\r\n  collection,\r\n  doc,\r\n  getDocs,\r\n  addDoc,\r\n  updateDoc,\r\n  deleteDoc,\r\n} from 'firebase/firestore';\r\n\r\n// Actions\r\nconst LOAD = 'wordBooks/LOAD';\r\nconst CREATE = 'wordBooks/CREATE';\r\nconst UPDATE = 'wordBooks/UPDATE';\r\nconst REMOVE = 'wordBooks/REMOVE';\r\n\r\n//initial State\r\nconst initialState = {\r\n  list: [],\r\n};\r\n\r\n// Action Creators\r\nexport function loadWordBook(wordBook_list) {\r\n  return { type: LOAD, wordBook_list };\r\n}\r\n\r\nexport function createWordBook(wordBook) {\r\n  return { type: CREATE, wordBook };\r\n}\r\n\r\nexport function updateWordBook(wordBooks) {\r\n  return { type: UPDATE, wordBooks };\r\n}\r\n\r\nexport function removeWordBook(index) {\r\n  return { type: REMOVE, index };\r\n}\r\n\r\n//middleware\r\nexport const loadWordBookFB = () => {\r\n  return async function (dispatch) {\r\n    const wordBook_data = await getDocs(collection(db, 'wordBook'));\r\n\r\n    let wordBook_list = [];\r\n\r\n    wordBook_data.forEach((doc) => {\r\n      wordBook_list.push({ ...doc.data(), id: doc.id });\r\n    });\r\n    dispatch(loadWordBook(wordBook_list));\r\n  };\r\n};\r\n\r\nexport const addWordBookFB = (wordBook) => {\r\n  return async function (dispatch) {\r\n    const docRef = await addDoc(collection(db, 'wordBook'), wordBook);\r\n    const wordBook_data = { ...wordBook, id: docRef.id };\r\n    console.log(wordBook_data);\r\n    dispatch(createWordBook(wordBook_data));\r\n  };\r\n};\r\n\r\nexport const updateWordBookFB = (wordBooks, wordBook) => {\r\n  return async function (dispatch) {\r\n    const docRef = doc(db, 'wordBook', wordBook.id);\r\n    updateDoc(docRef, wordBook);\r\n    dispatch(updateWordBook(wordBooks));\r\n  };\r\n};\r\nexport const removeWordBookFB = (id, index) => {\r\n  return async function (dispatch) {\r\n    const docRef = doc(db, 'wordBook', id);\r\n    deleteDoc(docRef);\r\n    dispatch(removeWordBook(index));\r\n  };\r\n};\r\n// Reducer\r\nexport default function reducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    // do reducer stuff\r\n    case LOAD: {\r\n      return { list: action.wordBook_list };\r\n    }\r\n    case CREATE: {\r\n      const new_wordBook_list = [...state.list, action.wordBook];\r\n      return { list: new_wordBook_list };\r\n    }\r\n    case UPDATE: {\r\n      const new_wordBook_list = action.wordBooks;\r\n      return { list: new_wordBook_list };\r\n    }\r\n    case REMOVE: {\r\n      const index = action.index;\r\n      const new_wordBook_list = state.list.filter((item, i) => i !== index);\r\n      return { list: new_wordBook_list };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}