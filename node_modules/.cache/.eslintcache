[{"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\index.js":"1","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\App.js":"2","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\pages\\AddPage.js":"3","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\pages\\MainPage.js":"4","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\Card.js":"5","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\CardBlock.js":"6","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\redux\\Store.js":"7","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\redux\\modules\\wordBook.js":"8","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\CardInput.js":"9","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\customHooks\\useScroll.js":"10","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\pages\\DetailPage.js":"11","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\firebase.js":"12","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\Test.js":"13","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\Header.js":"14","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\Spiner.js":"15"},{"size":430,"mtime":1649762791072,"results":"16","hashOfConfig":"17"},{"size":1343,"mtime":1649858236936,"results":"18","hashOfConfig":"17"},{"size":1630,"mtime":1649839933065,"results":"19","hashOfConfig":"17"},{"size":2735,"mtime":1649844856623,"results":"20","hashOfConfig":"17"},{"size":385,"mtime":1649838360574,"results":"21","hashOfConfig":"17"},{"size":508,"mtime":1649496407462,"results":"22","hashOfConfig":"17"},{"size":372,"mtime":1649749401821,"results":"23","hashOfConfig":"17"},{"size":2497,"mtime":1649848527577,"results":"24","hashOfConfig":"17"},{"size":983,"mtime":1649838410232,"results":"25","hashOfConfig":"17"},{"size":929,"mtime":1649674529447,"results":"26","hashOfConfig":"17"},{"size":2078,"mtime":1649840160563,"results":"27","hashOfConfig":"17"},{"size":925,"mtime":1649743922743,"results":"28","hashOfConfig":"17"},{"size":1062,"mtime":1649779257757,"results":"29","hashOfConfig":"17"},{"size":378,"mtime":1649840540953,"results":"30","hashOfConfig":"17"},{"size":242,"mtime":1649858258398,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"6qs9gg",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"35"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\index.js",[],[],["84","85"],"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\App.js",["86"],[],"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\pages\\AddPage.js",["87"],[],"import { React, useState } from 'react';\r\nimport Card from '../components/Card';\r\nimport CardInput from '../components/CardInput';\r\nimport styled from 'styled-components';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createWordBook, addWordBookFB } from '../redux/modules/wordBook';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\n\r\nconst AddPage = () => {\r\n  const [form, setForm] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      id: form.id + 1,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleClick = () => {\r\n    // dispatch(createWordBook(form));\r\n    dispatch(addWordBookFB(form));\r\n  };\r\n  return (\r\n    <>\r\n      <Header>단어 추가하기</Header>\r\n\r\n      <Card>\r\n        <CardInput\r\n          title='단어'\r\n          name='word'\r\n          handleChange={handleChange}\r\n        ></CardInput>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardInput\r\n          title='설명'\r\n          name='desc'\r\n          handleChange={handleChange}\r\n        ></CardInput>\r\n      </Card>\r\n      <Card>\r\n        <CardInput\r\n          title='예시'\r\n          name='example'\r\n          handleChange={handleChange}\r\n        ></CardInput>\r\n      </Card>\r\n      <Link to='/'>\r\n        <Button onClick={handleClick}>추가하기</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\nconst Button = styled.button`\r\n  padding: 10px;\r\n  width: 100%;\r\n\r\n  text-align: center;\r\n  background-color: #ff54e2;\r\n  color: white;\r\n\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: none;\r\n`;\r\nexport default AddPage;\r\n","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\pages\\MainPage.js",["88","89","90","91"],[],"import React, { useRef } from 'react';\r\nimport Card from '../components/Card';\r\nimport CardBlock from '../components/CardBlock';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { removeWordBookFB } from '../redux/modules/wordBook';\r\nimport { useScroll } from '../customHooks/useScroll';\r\nimport Header from '../components/Header';\r\n\r\nimport {\r\n  AiFillDelete,\r\n  AiOutlineDelete,\r\n  AiFillEdit,\r\n  AiOutlineEdit,\r\n} from 'react-icons/ai';\r\n\r\nconst MainPage = () => {\r\n  const navigate = useNavigate();\r\n  const myLists = useSelector((state) => state.wordBook.list);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <Header>My Dictionary</Header>\r\n\r\n      {myLists.map((item, i) => (\r\n        <Card key={i}>\r\n          <FloatDelBtn\r\n            onClick={(e) => {\r\n              // dispatch(removeWordBook(parseInt(e.target.name)));\r\n\r\n              dispatch(removeWordBookFB(item.id, parseInt(i)));\r\n            }}\r\n          >\r\n            <AiOutlineDelete />\r\n          </FloatDelBtn>\r\n          <FloatBtn\r\n            onClick={() => {\r\n              navigate(`/detail/${i}`);\r\n            }}\r\n          >\r\n            <AiOutlineEdit />\r\n          </FloatBtn>\r\n          <CardBlock title='단어' content={item.word} color='black' />\r\n          <CardBlock title='설명' content={item.desc} color='black' />\r\n          <CardBlock title='예시' content={item.example} color='skyblue' />\r\n        </Card>\r\n      ))}\r\n\r\n      <Link to='add'>\r\n        <Button>+</Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nconst boxAnimation = keyframes`\r\nfrom{\r\n  bottom: 1rem;\r\n}\r\n\r\nto{\r\n  bottom: 1rem;\r\n  transform: translateY()\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 5rem;\r\n  height: 5rem;\r\n\r\n  background-color: #ff54e2;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 4.5rem;\r\n  border-radius: 50px;\r\n\r\n  cursor: pointer;\r\n\r\n  border: none;\r\n  position: sticky;\r\n\r\n  bottom: 0rem;\r\n  left: 15rem;\r\n\r\n  animation: ${boxAnimation} 1s 1s infinite linear;\r\n`;\r\n\r\nconst FloatBtn = styled.button`\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  border: none;\r\n  position: absolute;\r\n\r\n  background-color: rgba(255, 255, 255, 0);\r\n\r\n  top: 0rem;\r\n  right: 0.5rem;\r\n\r\n  :hover {\r\n    color: #ff54e2;\r\n  }\r\n`;\r\nconst FloatDelBtn = styled.button`\r\n  width: 1.25rem;\r\n  height: 1.25rem;\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  border: none;\r\n  position: absolute;\r\n\r\n  background-color: rgba(255, 255, 255, 0);\r\n\r\n  top: 0rem;\r\n  right: 2.5rem;\r\n\r\n  :hover {\r\n    color: #ff54e2;\r\n  }\r\n`;\r\nexport default MainPage;\r\n","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\Card.js",[],[],"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\CardBlock.js",[],[],"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\redux\\Store.js",["92"],[],"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport wordBook from './modules/wordBook';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [thunk];\r\nconst rootReducer = combineReducers({ wordBook });\r\n\r\nconst enhancer = applyMiddleware(...middlewares);\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport default store;\r\n","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\redux\\modules\\wordBook.js",[],[],"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\CardInput.js",["93"],[],"import React, { useRef, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst CardInput = (props) => {\r\n  const { title, handleChange, name, text } = props;\r\n\r\n  const word = useRef(null);\r\n  const handleClick = () => {\r\n    console.log(word.current.value);\r\n  };\r\n  useEffect(() => {\r\n    if (text !== undefined) {\r\n      word.current.value = text;\r\n    }\r\n  }, [word]);\r\n  return (\r\n    <div>\r\n      <UnderLine>{title}</UnderLine>\r\n      <Content ref={word} name={name} onChange={handleChange} />\r\n\r\n      <button onClick={handleClick}>Ref확인용</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UnderLine = styled.div`\r\n  text-decoration: underline;\r\n  font-size: 0.5rem;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Content = styled.input`\r\n  font-size: 1.125rem;\r\n  line-height: 2rem;\r\n  width: 100%;\r\n  margin-bottom: 5px;\r\n  margin-right: 10px;\r\n  box-sizing: border-box;\r\n  border: 1.5px solid;\r\n  border-radius: 5px;\r\n  outline: none;\r\n`;\r\nexport default CardInput;\r\n","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\customHooks\\useScroll.js",[],[],"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\pages\\DetailPage.js",["94","95"],[],"import { React, useState, useRef } from 'react';\r\nimport Card from '../components/Card';\r\nimport CardInput from '../components/CardInput';\r\nimport styled from 'styled-components';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateWordBook, updateWordBookFB } from '../redux/modules/wordBook';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport Header from '../components/Header';\r\nconst DetailPage = () => {\r\n  const myLists = useSelector((state) => state.wordBook.list);\r\n\r\n  const { index } = useParams();\r\n\r\n  const { word, desc, example, id } = myLists[index];\r\n\r\n  const [form, setForm] = useState({\r\n    word: word,\r\n    desc: desc,\r\n    example: example,\r\n    id: id,\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n  const handleClick = () => {\r\n    myLists[index] = {\r\n      word: form.word,\r\n      desc: form.desc,\r\n      example: form.example,\r\n      id: id,\r\n    };\r\n\r\n    // dispatch(updateWordBook(myLists));\r\n    dispatch(updateWordBookFB(myLists, myLists[index]));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header>단어 수정하기</Header>\r\n      <Card>\r\n        <CardInput\r\n          title='단어'\r\n          name='word'\r\n          handleChange={handleChange}\r\n          text={word}\r\n        ></CardInput>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardInput\r\n          title='설명'\r\n          name='desc'\r\n          handleChange={handleChange}\r\n          text={desc}\r\n        ></CardInput>\r\n      </Card>\r\n      <Card>\r\n        <CardInput\r\n          title='예시'\r\n          name='example'\r\n          handleChange={handleChange}\r\n          text={example}\r\n        ></CardInput>\r\n      </Card>\r\n\r\n      <Link to='/'>\r\n        <Button onClick={handleClick}>수정하기</Button>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\nconst Button = styled.div`\r\n  padding: 10px;\r\n\r\n  text-align: center;\r\n  background-color: #ff54e2;\r\n  color: white;\r\n\r\n  cursor: pointer;\r\n\r\n  text-decoration: none;\r\n`;\r\nexport default DetailPage;\r\n","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\firebase.js",[],[],"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\Test.js",["96","97","98"],[],"import React from 'react';\r\nimport { MdFullscreenExit } from 'react-icons/md';\r\nimport styled from 'styled-components';\r\nimport { useSelector } from 'react-redux';\r\nconst Test = () => {\r\n  // 리덕스가 가지고있는 전체데이터 가지고 오기\r\n  // 전체데이터(state)=>return값이 state\r\n  const my_lists = [\r\n    {\r\n      id: '1',\r\n      word: '단어를 적어주세요',\r\n      desc: '설명을 적어주세여',\r\n      example: '예시다',\r\n    },\r\n    {\r\n      id: '2',\r\n      word: '단어를 적어주세요',\r\n      desc: '설명을 적어주세여',\r\n      example: '예시다',\r\n    },\r\n    {\r\n      id: '3',\r\n      word: '단어를 적어주세요',\r\n      desc: '설명을 적어주세여',\r\n      example: '예시다',\r\n    },\r\n  ];\r\n\r\n  // my_lists.map((list, index, array) => {\r\n  //   console.log(list, index, array);\r\n  // });\r\n  return (\r\n    <div>\r\n      <div>hihii</div>\r\n      {my_lists.map((list, index) => {\r\n        return <div>{list}</div>;\r\n      })}\r\n      <div>hi</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\Header.js",[],[],"C:\\Users\\HHS\\Documents\\git\\wordbook\\src\\components\\Spiner.js",[],[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":10,"column":8,"nodeType":"105","messageId":"106","endLine":10,"endColumn":12},{"ruleId":"103","severity":1,"message":"107","line":6,"column":10,"nodeType":"105","messageId":"106","endLine":6,"endColumn":24},{"ruleId":"103","severity":1,"message":"108","line":1,"column":17,"nodeType":"105","messageId":"106","endLine":1,"endColumn":23},{"ruleId":"103","severity":1,"message":"109","line":8,"column":10,"nodeType":"105","messageId":"106","endLine":8,"endColumn":19},{"ruleId":"103","severity":1,"message":"110","line":12,"column":3,"nodeType":"105","messageId":"106","endLine":12,"endColumn":15},{"ruleId":"103","severity":1,"message":"111","line":14,"column":3,"nodeType":"105","messageId":"106","endLine":14,"endColumn":13},{"ruleId":"103","severity":1,"message":"112","line":1,"column":57,"nodeType":"105","messageId":"106","endLine":1,"endColumn":64},{"ruleId":"113","severity":1,"message":"114","line":15,"column":6,"nodeType":"115","endLine":15,"endColumn":12,"suggestions":"116"},{"ruleId":"103","severity":1,"message":"108","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":33},{"ruleId":"103","severity":1,"message":"117","line":6,"column":10,"nodeType":"105","messageId":"106","endLine":6,"endColumn":24},{"ruleId":"103","severity":1,"message":"118","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":26},{"ruleId":"103","severity":1,"message":"119","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":14},{"ruleId":"103","severity":1,"message":"120","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":21},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","'createWordBook' is defined but never used.","'useRef' is defined but never used.","'useScroll' is defined but never used.","'AiFillDelete' is defined but never used.","'AiFillEdit' is defined but never used.","'compose' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'text'. Either include it or remove the dependency array.","ArrayExpression",["123"],"'updateWordBook' is defined but never used.","'MdFullscreenExit' is defined but never used.","'styled' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [text, word]",{"range":"126","text":"127"},[385,391],"[text, word]"]